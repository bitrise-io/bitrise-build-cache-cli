import io.bitrise.gradle.cache.BitriseBuildCache
import io.bitrise.gradle.cache.BitriseBuildCacheServiceFactory 

initscript {
    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven(url="https://jitpack.io")
    }
    dependencies {
        classpath("io.bitrise.gradle:remote-cache:{{ .CachePluginVersion }}")
        {{- if .IsAnalyticsEnabled }}
        classpath("io.bitrise.gradle:gradle-analytics:{{ .AnalyticsPluginVersion }}")
        {{- end }}
    }
}

settingsEvaluated {
    buildCache {
        local {
            isEnabled = false
        }

        registerBuildCacheService(BitriseBuildCache::class.java, BitriseBuildCacheServiceFactory::class.java)
        remote(BitriseBuildCache::class.java) {
            endpoint = "{{ .CacheEndpointURLWithPort }}"
            authToken = "{{ .AuthToken }}"
            isEnabled = true
            isPush = {{ .IsPushEnabled }}
            debug = {{ .IsDebugEnabled }}
            blobValidationLevel = "{{ .ValidationLevel }}"
        }
    }
}

{{- if .IsAnalyticsEnabled }}

rootProject {
    apply<io.bitrise.gradle.analytics.AnalyticsPlugin>()

    extensions.configure<io.bitrise.gradle.analytics.AnalyticsPluginExtension>{
        endpoint.set("{{ .AnalyticsEndpoint }}:{{ .AnalyticsPort }}")
        httpEndpoint.set("{{ .AnalyticsHTTPEndpoint }}")
        authToken.set("{{ .AuthToken }}")
        dumpEventsToFiles.set({{ .IsDebugEnabled }})
        debug.set({{ .IsDebugEnabled }})
        enabled.set(true)

        providerName.set("{{ .CacheConfigMetadata.CIProvider }}")

        bitrise {
            {{- if .CacheConfigMetadata.BitriseAppID }}
            appSlug.set("{{ .CacheConfigMetadata.BitriseAppID }}")
            {{- end }}
            {{- if .CacheConfigMetadata.BitriseBuildID }}
            buildSlug.set("{{ .CacheConfigMetadata.BitriseBuildID }}")
            {{- end }}
            {{- if .CacheConfigMetadata.BitriseWorkflowName }}
            workflowName.set("{{ .CacheConfigMetadata.BitriseWorkflowName }}")
            {{- end }}
        }
    }
}
{{- end }}
