//===--- compilation_caching_cas.proto - CAS service definition -----------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: llvm/cas/compilation_caching_cas.proto

package llvmcas

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CASGetResponse_Outcome int32

const (
	CASGetResponse_ERROR            CASGetResponse_Outcome = 0 // if unset, we'll get error
	CASGetResponse_OBJECT_NOT_FOUND CASGetResponse_Outcome = 1
	CASGetResponse_SUCCESS          CASGetResponse_Outcome = 2
)

// Enum value maps for CASGetResponse_Outcome.
var (
	CASGetResponse_Outcome_name = map[int32]string{
		0: "ERROR",
		1: "OBJECT_NOT_FOUND",
		2: "SUCCESS",
	}
	CASGetResponse_Outcome_value = map[string]int32{
		"ERROR":            0,
		"OBJECT_NOT_FOUND": 1,
		"SUCCESS":          2,
	}
)

func (x CASGetResponse_Outcome) Enum() *CASGetResponse_Outcome {
	p := new(CASGetResponse_Outcome)
	*p = x
	return p
}

func (x CASGetResponse_Outcome) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CASGetResponse_Outcome) Descriptor() protoreflect.EnumDescriptor {
	return file_llvm_cas_compilation_caching_cas_proto_enumTypes[0].Descriptor()
}

func (CASGetResponse_Outcome) Type() protoreflect.EnumType {
	return &file_llvm_cas_compilation_caching_cas_proto_enumTypes[0]
}

func (x CASGetResponse_Outcome) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CASGetResponse_Outcome.Descriptor instead.
func (CASGetResponse_Outcome) EnumDescriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{8, 0}
}

type CASLoadResponse_Outcome int32

const (
	CASLoadResponse_ERROR            CASLoadResponse_Outcome = 0 // if unset, we'll get error
	CASLoadResponse_OBJECT_NOT_FOUND CASLoadResponse_Outcome = 1
	CASLoadResponse_SUCCESS          CASLoadResponse_Outcome = 2
)

// Enum value maps for CASLoadResponse_Outcome.
var (
	CASLoadResponse_Outcome_name = map[int32]string{
		0: "ERROR",
		1: "OBJECT_NOT_FOUND",
		2: "SUCCESS",
	}
	CASLoadResponse_Outcome_value = map[string]int32{
		"ERROR":            0,
		"OBJECT_NOT_FOUND": 1,
		"SUCCESS":          2,
	}
)

func (x CASLoadResponse_Outcome) Enum() *CASLoadResponse_Outcome {
	p := new(CASLoadResponse_Outcome)
	*p = x
	return p
}

func (x CASLoadResponse_Outcome) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CASLoadResponse_Outcome) Descriptor() protoreflect.EnumDescriptor {
	return file_llvm_cas_compilation_caching_cas_proto_enumTypes[1].Descriptor()
}

func (CASLoadResponse_Outcome) Type() protoreflect.EnumType {
	return &file_llvm_cas_compilation_caching_cas_proto_enumTypes[1]
}

func (x CASLoadResponse_Outcome) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CASLoadResponse_Outcome.Descriptor instead.
func (CASLoadResponse_Outcome) EnumDescriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{12, 0}
}

// MARK: - Data types
type CASDataID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CASDataID) Reset() {
	*x = CASDataID{}
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CASDataID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASDataID) ProtoMessage() {}

func (x *CASDataID) ProtoReflect() protoreflect.Message {
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASDataID.ProtoReflect.Descriptor instead.
func (*CASDataID) Descriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{0}
}

func (x *CASDataID) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

// `CASObject` and `CASBlob` should be wire compatible.
type CASObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blob          *CASBytes              `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	References    []*CASDataID           `protobuf:"bytes,2,rep,name=references,proto3" json:"references,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CASObject) Reset() {
	*x = CASObject{}
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CASObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASObject) ProtoMessage() {}

func (x *CASObject) ProtoReflect() protoreflect.Message {
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASObject.ProtoReflect.Descriptor instead.
func (*CASObject) Descriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{1}
}

func (x *CASObject) GetBlob() *CASBytes {
	if x != nil {
		return x.Blob
	}
	return nil
}

func (x *CASObject) GetReferences() []*CASDataID {
	if x != nil {
		return x.References
	}
	return nil
}

// `CASObject` and `CASBlob` should be wire compatible.
type CASBlob struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blob          *CASBytes              `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CASBlob) Reset() {
	*x = CASBlob{}
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CASBlob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASBlob) ProtoMessage() {}

func (x *CASBlob) ProtoReflect() protoreflect.Message {
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASBlob.ProtoReflect.Descriptor instead.
func (*CASBlob) Descriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{2}
}

func (x *CASBlob) GetBlob() *CASBytes {
	if x != nil {
		return x.Blob
	}
	return nil
}

type CASBytes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Contents:
	//
	//	*CASBytes_Data
	//	*CASBytes_FilePath
	Contents      isCASBytes_Contents `protobuf_oneof:"contents"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CASBytes) Reset() {
	*x = CASBytes{}
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CASBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASBytes) ProtoMessage() {}

func (x *CASBytes) ProtoReflect() protoreflect.Message {
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASBytes.ProtoReflect.Descriptor instead.
func (*CASBytes) Descriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{3}
}

func (x *CASBytes) GetContents() isCASBytes_Contents {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *CASBytes) GetData() []byte {
	if x != nil {
		if x, ok := x.Contents.(*CASBytes_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *CASBytes) GetFilePath() string {
	if x != nil {
		if x, ok := x.Contents.(*CASBytes_FilePath); ok {
			return x.FilePath
		}
	}
	return ""
}

type isCASBytes_Contents interface {
	isCASBytes_Contents()
}

type CASBytes_Data struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type CASBytes_FilePath struct {
	FilePath string `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3,oneof"`
}

func (*CASBytes_Data) isCASBytes_Contents() {}

func (*CASBytes_FilePath) isCASBytes_Contents() {}

type ResponseError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseError) Reset() {
	*x = ResponseError{}
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseError) ProtoMessage() {}

func (x *ResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseError.ProtoReflect.Descriptor instead.
func (*ResponseError) Descriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{4}
}

func (x *ResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// MARK: Put
type CASPutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *CASObject             `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CASPutRequest) Reset() {
	*x = CASPutRequest{}
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CASPutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASPutRequest) ProtoMessage() {}

func (x *CASPutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASPutRequest.ProtoReflect.Descriptor instead.
func (*CASPutRequest) Descriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{5}
}

func (x *CASPutRequest) GetData() *CASObject {
	if x != nil {
		return x.Data
	}
	return nil
}

type CASPutResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Contents:
	//
	//	*CASPutResponse_Error
	//	*CASPutResponse_CasId
	Contents      isCASPutResponse_Contents `protobuf_oneof:"contents"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CASPutResponse) Reset() {
	*x = CASPutResponse{}
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CASPutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASPutResponse) ProtoMessage() {}

func (x *CASPutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASPutResponse.ProtoReflect.Descriptor instead.
func (*CASPutResponse) Descriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{6}
}

func (x *CASPutResponse) GetContents() isCASPutResponse_Contents {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *CASPutResponse) GetError() *ResponseError {
	if x != nil {
		if x, ok := x.Contents.(*CASPutResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *CASPutResponse) GetCasId() *CASDataID {
	if x != nil {
		if x, ok := x.Contents.(*CASPutResponse_CasId); ok {
			return x.CasId
		}
	}
	return nil
}

type isCASPutResponse_Contents interface {
	isCASPutResponse_Contents()
}

type CASPutResponse_Error struct {
	Error *ResponseError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CASPutResponse_CasId struct {
	CasId *CASDataID `protobuf:"bytes,2,opt,name=cas_id,json=casId,proto3,oneof"`
}

func (*CASPutResponse_Error) isCASPutResponse_Contents() {}

func (*CASPutResponse_CasId) isCASPutResponse_Contents() {}

// MARK: Get
type CASGetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	CasId *CASDataID             `protobuf:"bytes,1,opt,name=cas_id,json=casId,proto3" json:"cas_id,omitempty"`
	// If set, the client asks for the service to write the blob part to disk, with a
	// file path of the service's choosing.
	//
	// However this is not a hard requirement, the service can still choose to
	// return the blob back as `bytes`. The client should always check whether
	// the blob came back as `bytes` or as a file on disk.
	//
	// If the service writes the blob to a file, it should have the right
	// access for the client to be able to move it to a different path.
	WriteToDisk   bool `protobuf:"varint,2,opt,name=write_to_disk,json=writeToDisk,proto3" json:"write_to_disk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CASGetRequest) Reset() {
	*x = CASGetRequest{}
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CASGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASGetRequest) ProtoMessage() {}

func (x *CASGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASGetRequest.ProtoReflect.Descriptor instead.
func (*CASGetRequest) Descriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{7}
}

func (x *CASGetRequest) GetCasId() *CASDataID {
	if x != nil {
		return x.CasId
	}
	return nil
}

func (x *CASGetRequest) GetWriteToDisk() bool {
	if x != nil {
		return x.WriteToDisk
	}
	return false
}

type CASGetResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Outcome CASGetResponse_Outcome `protobuf:"varint,1,opt,name=outcome,proto3,enum=compilation_cache_service.cas.v1.CASGetResponse_Outcome" json:"outcome,omitempty"`
	// Types that are valid to be assigned to Contents:
	//
	//	*CASGetResponse_Error
	//	*CASGetResponse_Data
	Contents      isCASGetResponse_Contents `protobuf_oneof:"contents"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CASGetResponse) Reset() {
	*x = CASGetResponse{}
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CASGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASGetResponse) ProtoMessage() {}

func (x *CASGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASGetResponse.ProtoReflect.Descriptor instead.
func (*CASGetResponse) Descriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{8}
}

func (x *CASGetResponse) GetOutcome() CASGetResponse_Outcome {
	if x != nil {
		return x.Outcome
	}
	return CASGetResponse_ERROR
}

func (x *CASGetResponse) GetContents() isCASGetResponse_Contents {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *CASGetResponse) GetError() *ResponseError {
	if x != nil {
		if x, ok := x.Contents.(*CASGetResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *CASGetResponse) GetData() *CASObject {
	if x != nil {
		if x, ok := x.Contents.(*CASGetResponse_Data); ok {
			return x.Data
		}
	}
	return nil
}

type isCASGetResponse_Contents interface {
	isCASGetResponse_Contents()
}

type CASGetResponse_Error struct {
	Error *ResponseError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type CASGetResponse_Data struct {
	Data *CASObject `protobuf:"bytes,3,opt,name=data,proto3,oneof"`
}

func (*CASGetResponse_Error) isCASGetResponse_Contents() {}

func (*CASGetResponse_Data) isCASGetResponse_Contents() {}

// MARK: Save
type CASSaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *CASBlob               `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CASSaveRequest) Reset() {
	*x = CASSaveRequest{}
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CASSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASSaveRequest) ProtoMessage() {}

func (x *CASSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASSaveRequest.ProtoReflect.Descriptor instead.
func (*CASSaveRequest) Descriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{9}
}

func (x *CASSaveRequest) GetData() *CASBlob {
	if x != nil {
		return x.Data
	}
	return nil
}

type CASSaveResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Contents:
	//
	//	*CASSaveResponse_Error
	//	*CASSaveResponse_CasId
	Contents      isCASSaveResponse_Contents `protobuf_oneof:"contents"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CASSaveResponse) Reset() {
	*x = CASSaveResponse{}
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CASSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASSaveResponse) ProtoMessage() {}

func (x *CASSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASSaveResponse.ProtoReflect.Descriptor instead.
func (*CASSaveResponse) Descriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{10}
}

func (x *CASSaveResponse) GetContents() isCASSaveResponse_Contents {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *CASSaveResponse) GetError() *ResponseError {
	if x != nil {
		if x, ok := x.Contents.(*CASSaveResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *CASSaveResponse) GetCasId() *CASDataID {
	if x != nil {
		if x, ok := x.Contents.(*CASSaveResponse_CasId); ok {
			return x.CasId
		}
	}
	return nil
}

type isCASSaveResponse_Contents interface {
	isCASSaveResponse_Contents()
}

type CASSaveResponse_Error struct {
	Error *ResponseError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CASSaveResponse_CasId struct {
	CasId *CASDataID `protobuf:"bytes,2,opt,name=cas_id,json=casId,proto3,oneof"`
}

func (*CASSaveResponse_Error) isCASSaveResponse_Contents() {}

func (*CASSaveResponse_CasId) isCASSaveResponse_Contents() {}

// MARK: Load
type CASLoadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	CasId *CASDataID             `protobuf:"bytes,1,opt,name=cas_id,json=casId,proto3" json:"cas_id,omitempty"`
	// If set, the client asks for the service to write the blob part to disk, with a
	// file path of the service's choosing.
	//
	// However this is not a hard requirement, the service can still choose to
	// return the blob back as `bytes`. The client should always check whether
	// the blob came back as `bytes` or as a file on disk.
	//
	// If the service writes the blob to a file, it should have the right
	// access for the client to be able to move it to a different path.
	WriteToDisk   bool `protobuf:"varint,2,opt,name=write_to_disk,json=writeToDisk,proto3" json:"write_to_disk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CASLoadRequest) Reset() {
	*x = CASLoadRequest{}
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CASLoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASLoadRequest) ProtoMessage() {}

func (x *CASLoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASLoadRequest.ProtoReflect.Descriptor instead.
func (*CASLoadRequest) Descriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{11}
}

func (x *CASLoadRequest) GetCasId() *CASDataID {
	if x != nil {
		return x.CasId
	}
	return nil
}

func (x *CASLoadRequest) GetWriteToDisk() bool {
	if x != nil {
		return x.WriteToDisk
	}
	return false
}

type CASLoadResponse struct {
	state   protoimpl.MessageState  `protogen:"open.v1"`
	Outcome CASLoadResponse_Outcome `protobuf:"varint,1,opt,name=outcome,proto3,enum=compilation_cache_service.cas.v1.CASLoadResponse_Outcome" json:"outcome,omitempty"`
	// Types that are valid to be assigned to Contents:
	//
	//	*CASLoadResponse_Error
	//	*CASLoadResponse_Data
	Contents      isCASLoadResponse_Contents `protobuf_oneof:"contents"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CASLoadResponse) Reset() {
	*x = CASLoadResponse{}
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CASLoadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASLoadResponse) ProtoMessage() {}

func (x *CASLoadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_llvm_cas_compilation_caching_cas_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASLoadResponse.ProtoReflect.Descriptor instead.
func (*CASLoadResponse) Descriptor() ([]byte, []int) {
	return file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP(), []int{12}
}

func (x *CASLoadResponse) GetOutcome() CASLoadResponse_Outcome {
	if x != nil {
		return x.Outcome
	}
	return CASLoadResponse_ERROR
}

func (x *CASLoadResponse) GetContents() isCASLoadResponse_Contents {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *CASLoadResponse) GetError() *ResponseError {
	if x != nil {
		if x, ok := x.Contents.(*CASLoadResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *CASLoadResponse) GetData() *CASBlob {
	if x != nil {
		if x, ok := x.Contents.(*CASLoadResponse_Data); ok {
			return x.Data
		}
	}
	return nil
}

type isCASLoadResponse_Contents interface {
	isCASLoadResponse_Contents()
}

type CASLoadResponse_Error struct {
	Error *ResponseError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type CASLoadResponse_Data struct {
	Data *CASBlob `protobuf:"bytes,3,opt,name=data,proto3,oneof"`
}

func (*CASLoadResponse_Error) isCASLoadResponse_Contents() {}

func (*CASLoadResponse_Data) isCASLoadResponse_Contents() {}

var File_llvm_cas_compilation_caching_cas_proto protoreflect.FileDescriptor

const file_llvm_cas_compilation_caching_cas_proto_rawDesc = "" +
	"\n" +
	"&llvm/cas/compilation_caching_cas.proto\x12 compilation_cache_service.cas.v1\"\x1b\n" +
	"\tCASDataID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\"\x98\x01\n" +
	"\tCASObject\x12>\n" +
	"\x04blob\x18\x01 \x01(\v2*.compilation_cache_service.cas.v1.CASBytesR\x04blob\x12K\n" +
	"\n" +
	"references\x18\x02 \x03(\v2+.compilation_cache_service.cas.v1.CASDataIDR\n" +
	"references\"I\n" +
	"\aCASBlob\x12>\n" +
	"\x04blob\x18\x01 \x01(\v2*.compilation_cache_service.cas.v1.CASBytesR\x04blob\"K\n" +
	"\bCASBytes\x12\x14\n" +
	"\x04data\x18\x01 \x01(\fH\x00R\x04data\x12\x1d\n" +
	"\tfile_path\x18\x02 \x01(\tH\x00R\bfilePathB\n" +
	"\n" +
	"\bcontents\"1\n" +
	"\rResponseError\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\"P\n" +
	"\rCASPutRequest\x12?\n" +
	"\x04data\x18\x01 \x01(\v2+.compilation_cache_service.cas.v1.CASObjectR\x04data\"\xab\x01\n" +
	"\x0eCASPutResponse\x12G\n" +
	"\x05error\x18\x01 \x01(\v2/.compilation_cache_service.cas.v1.ResponseErrorH\x00R\x05error\x12D\n" +
	"\x06cas_id\x18\x02 \x01(\v2+.compilation_cache_service.cas.v1.CASDataIDH\x00R\x05casIdB\n" +
	"\n" +
	"\bcontents\"w\n" +
	"\rCASGetRequest\x12B\n" +
	"\x06cas_id\x18\x01 \x01(\v2+.compilation_cache_service.cas.v1.CASDataIDR\x05casId\x12\"\n" +
	"\rwrite_to_disk\x18\x02 \x01(\bR\vwriteToDisk\"\xb5\x02\n" +
	"\x0eCASGetResponse\x12R\n" +
	"\aoutcome\x18\x01 \x01(\x0e28.compilation_cache_service.cas.v1.CASGetResponse.OutcomeR\aoutcome\x12G\n" +
	"\x05error\x18\x02 \x01(\v2/.compilation_cache_service.cas.v1.ResponseErrorH\x00R\x05error\x12A\n" +
	"\x04data\x18\x03 \x01(\v2+.compilation_cache_service.cas.v1.CASObjectH\x00R\x04data\"7\n" +
	"\aOutcome\x12\t\n" +
	"\x05ERROR\x10\x00\x12\x14\n" +
	"\x10OBJECT_NOT_FOUND\x10\x01\x12\v\n" +
	"\aSUCCESS\x10\x02B\n" +
	"\n" +
	"\bcontents\"O\n" +
	"\x0eCASSaveRequest\x12=\n" +
	"\x04data\x18\x01 \x01(\v2).compilation_cache_service.cas.v1.CASBlobR\x04data\"\xac\x01\n" +
	"\x0fCASSaveResponse\x12G\n" +
	"\x05error\x18\x01 \x01(\v2/.compilation_cache_service.cas.v1.ResponseErrorH\x00R\x05error\x12D\n" +
	"\x06cas_id\x18\x02 \x01(\v2+.compilation_cache_service.cas.v1.CASDataIDH\x00R\x05casIdB\n" +
	"\n" +
	"\bcontents\"x\n" +
	"\x0eCASLoadRequest\x12B\n" +
	"\x06cas_id\x18\x01 \x01(\v2+.compilation_cache_service.cas.v1.CASDataIDR\x05casId\x12\"\n" +
	"\rwrite_to_disk\x18\x02 \x01(\bR\vwriteToDisk\"\xb5\x02\n" +
	"\x0fCASLoadResponse\x12S\n" +
	"\aoutcome\x18\x01 \x01(\x0e29.compilation_cache_service.cas.v1.CASLoadResponse.OutcomeR\aoutcome\x12G\n" +
	"\x05error\x18\x02 \x01(\v2/.compilation_cache_service.cas.v1.ResponseErrorH\x00R\x05error\x12?\n" +
	"\x04data\x18\x03 \x01(\v2).compilation_cache_service.cas.v1.CASBlobH\x00R\x04data\"7\n" +
	"\aOutcome\x12\t\n" +
	"\x05ERROR\x10\x00\x12\x14\n" +
	"\x10OBJECT_NOT_FOUND\x10\x01\x12\v\n" +
	"\aSUCCESS\x10\x02B\n" +
	"\n" +
	"\bcontents2\xc4\x03\n" +
	"\fCASDBService\x12j\n" +
	"\x03Get\x12/.compilation_cache_service.cas.v1.CASGetRequest\x1a0.compilation_cache_service.cas.v1.CASGetResponse\"\x00\x12j\n" +
	"\x03Put\x12/.compilation_cache_service.cas.v1.CASPutRequest\x1a0.compilation_cache_service.cas.v1.CASPutResponse\"\x00\x12m\n" +
	"\x04Load\x120.compilation_cache_service.cas.v1.CASLoadRequest\x1a1.compilation_cache_service.cas.v1.CASLoadResponse\"\x00\x12m\n" +
	"\x04Save\x120.compilation_cache_service.cas.v1.CASSaveRequest\x1a1.compilation_cache_service.cas.v1.CASSaveResponse\"\x00B\x89\x01\n" +
	"&com.apple.dt.compilation_cache_serviceB\x17CompilationCachingProtoP\x01Z>github.com/bitrise-io/bitrise-build-cache-cli/llvm/cas;llvmcas\xa2\x02\x03CCSb\x06proto3"

var (
	file_llvm_cas_compilation_caching_cas_proto_rawDescOnce sync.Once
	file_llvm_cas_compilation_caching_cas_proto_rawDescData []byte
)

func file_llvm_cas_compilation_caching_cas_proto_rawDescGZIP() []byte {
	file_llvm_cas_compilation_caching_cas_proto_rawDescOnce.Do(func() {
		file_llvm_cas_compilation_caching_cas_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_llvm_cas_compilation_caching_cas_proto_rawDesc), len(file_llvm_cas_compilation_caching_cas_proto_rawDesc)))
	})
	return file_llvm_cas_compilation_caching_cas_proto_rawDescData
}

var file_llvm_cas_compilation_caching_cas_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_llvm_cas_compilation_caching_cas_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_llvm_cas_compilation_caching_cas_proto_goTypes = []any{
	(CASGetResponse_Outcome)(0),  // 0: compilation_cache_service.cas.v1.CASGetResponse.Outcome
	(CASLoadResponse_Outcome)(0), // 1: compilation_cache_service.cas.v1.CASLoadResponse.Outcome
	(*CASDataID)(nil),            // 2: compilation_cache_service.cas.v1.CASDataID
	(*CASObject)(nil),            // 3: compilation_cache_service.cas.v1.CASObject
	(*CASBlob)(nil),              // 4: compilation_cache_service.cas.v1.CASBlob
	(*CASBytes)(nil),             // 5: compilation_cache_service.cas.v1.CASBytes
	(*ResponseError)(nil),        // 6: compilation_cache_service.cas.v1.ResponseError
	(*CASPutRequest)(nil),        // 7: compilation_cache_service.cas.v1.CASPutRequest
	(*CASPutResponse)(nil),       // 8: compilation_cache_service.cas.v1.CASPutResponse
	(*CASGetRequest)(nil),        // 9: compilation_cache_service.cas.v1.CASGetRequest
	(*CASGetResponse)(nil),       // 10: compilation_cache_service.cas.v1.CASGetResponse
	(*CASSaveRequest)(nil),       // 11: compilation_cache_service.cas.v1.CASSaveRequest
	(*CASSaveResponse)(nil),      // 12: compilation_cache_service.cas.v1.CASSaveResponse
	(*CASLoadRequest)(nil),       // 13: compilation_cache_service.cas.v1.CASLoadRequest
	(*CASLoadResponse)(nil),      // 14: compilation_cache_service.cas.v1.CASLoadResponse
}
var file_llvm_cas_compilation_caching_cas_proto_depIdxs = []int32{
	5,  // 0: compilation_cache_service.cas.v1.CASObject.blob:type_name -> compilation_cache_service.cas.v1.CASBytes
	2,  // 1: compilation_cache_service.cas.v1.CASObject.references:type_name -> compilation_cache_service.cas.v1.CASDataID
	5,  // 2: compilation_cache_service.cas.v1.CASBlob.blob:type_name -> compilation_cache_service.cas.v1.CASBytes
	3,  // 3: compilation_cache_service.cas.v1.CASPutRequest.data:type_name -> compilation_cache_service.cas.v1.CASObject
	6,  // 4: compilation_cache_service.cas.v1.CASPutResponse.error:type_name -> compilation_cache_service.cas.v1.ResponseError
	2,  // 5: compilation_cache_service.cas.v1.CASPutResponse.cas_id:type_name -> compilation_cache_service.cas.v1.CASDataID
	2,  // 6: compilation_cache_service.cas.v1.CASGetRequest.cas_id:type_name -> compilation_cache_service.cas.v1.CASDataID
	0,  // 7: compilation_cache_service.cas.v1.CASGetResponse.outcome:type_name -> compilation_cache_service.cas.v1.CASGetResponse.Outcome
	6,  // 8: compilation_cache_service.cas.v1.CASGetResponse.error:type_name -> compilation_cache_service.cas.v1.ResponseError
	3,  // 9: compilation_cache_service.cas.v1.CASGetResponse.data:type_name -> compilation_cache_service.cas.v1.CASObject
	4,  // 10: compilation_cache_service.cas.v1.CASSaveRequest.data:type_name -> compilation_cache_service.cas.v1.CASBlob
	6,  // 11: compilation_cache_service.cas.v1.CASSaveResponse.error:type_name -> compilation_cache_service.cas.v1.ResponseError
	2,  // 12: compilation_cache_service.cas.v1.CASSaveResponse.cas_id:type_name -> compilation_cache_service.cas.v1.CASDataID
	2,  // 13: compilation_cache_service.cas.v1.CASLoadRequest.cas_id:type_name -> compilation_cache_service.cas.v1.CASDataID
	1,  // 14: compilation_cache_service.cas.v1.CASLoadResponse.outcome:type_name -> compilation_cache_service.cas.v1.CASLoadResponse.Outcome
	6,  // 15: compilation_cache_service.cas.v1.CASLoadResponse.error:type_name -> compilation_cache_service.cas.v1.ResponseError
	4,  // 16: compilation_cache_service.cas.v1.CASLoadResponse.data:type_name -> compilation_cache_service.cas.v1.CASBlob
	9,  // 17: compilation_cache_service.cas.v1.CASDBService.Get:input_type -> compilation_cache_service.cas.v1.CASGetRequest
	7,  // 18: compilation_cache_service.cas.v1.CASDBService.Put:input_type -> compilation_cache_service.cas.v1.CASPutRequest
	13, // 19: compilation_cache_service.cas.v1.CASDBService.Load:input_type -> compilation_cache_service.cas.v1.CASLoadRequest
	11, // 20: compilation_cache_service.cas.v1.CASDBService.Save:input_type -> compilation_cache_service.cas.v1.CASSaveRequest
	10, // 21: compilation_cache_service.cas.v1.CASDBService.Get:output_type -> compilation_cache_service.cas.v1.CASGetResponse
	8,  // 22: compilation_cache_service.cas.v1.CASDBService.Put:output_type -> compilation_cache_service.cas.v1.CASPutResponse
	14, // 23: compilation_cache_service.cas.v1.CASDBService.Load:output_type -> compilation_cache_service.cas.v1.CASLoadResponse
	12, // 24: compilation_cache_service.cas.v1.CASDBService.Save:output_type -> compilation_cache_service.cas.v1.CASSaveResponse
	21, // [21:25] is the sub-list for method output_type
	17, // [17:21] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_llvm_cas_compilation_caching_cas_proto_init() }
func file_llvm_cas_compilation_caching_cas_proto_init() {
	if File_llvm_cas_compilation_caching_cas_proto != nil {
		return
	}
	file_llvm_cas_compilation_caching_cas_proto_msgTypes[3].OneofWrappers = []any{
		(*CASBytes_Data)(nil),
		(*CASBytes_FilePath)(nil),
	}
	file_llvm_cas_compilation_caching_cas_proto_msgTypes[6].OneofWrappers = []any{
		(*CASPutResponse_Error)(nil),
		(*CASPutResponse_CasId)(nil),
	}
	file_llvm_cas_compilation_caching_cas_proto_msgTypes[8].OneofWrappers = []any{
		(*CASGetResponse_Error)(nil),
		(*CASGetResponse_Data)(nil),
	}
	file_llvm_cas_compilation_caching_cas_proto_msgTypes[10].OneofWrappers = []any{
		(*CASSaveResponse_Error)(nil),
		(*CASSaveResponse_CasId)(nil),
	}
	file_llvm_cas_compilation_caching_cas_proto_msgTypes[12].OneofWrappers = []any{
		(*CASLoadResponse_Error)(nil),
		(*CASLoadResponse_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_llvm_cas_compilation_caching_cas_proto_rawDesc), len(file_llvm_cas_compilation_caching_cas_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_llvm_cas_compilation_caching_cas_proto_goTypes,
		DependencyIndexes: file_llvm_cas_compilation_caching_cas_proto_depIdxs,
		EnumInfos:         file_llvm_cas_compilation_caching_cas_proto_enumTypes,
		MessageInfos:      file_llvm_cas_compilation_caching_cas_proto_msgTypes,
	}.Build()
	File_llvm_cas_compilation_caching_cas_proto = out.File
	file_llvm_cas_compilation_caching_cas_proto_goTypes = nil
	file_llvm_cas_compilation_caching_cas_proto_depIdxs = nil
}
