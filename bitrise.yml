format_version: "13"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: other
meta:
  bitrise.io:
    machine_type_id: standard
    stack: linux-docker-android-22.04
trigger_map:
- push_branch: main
  workflow: test
- pull_request_source_branch: '*'
  workflow: test
- tag: '*.*.*'
  workflow: release
workflows:
  release:
    description: Creates Linux and Darwin binaries, then publishes a GitHub release
    envs:
    - GITHUB_TOKEN: $GIT_BOT_USER_ACCESS_TOKEN
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@8:
        inputs:
        - fetch_tags: "yes"
    - script@1:
        title: asdf use latest go
        inputs:
        - content: |-
            #!/usr/bin/env bash

            asdf global golang 1.22
    - script:
        title: Install Goreleaser
        inputs:
        - content: |
            #!/usr/bin/env bash
            set -ex

            GOBIN=/usr/local/bin/ go install github.com/goreleaser/goreleaser/v2@latest
    - script:
        title: Generate verification
        inputs:
        - content: |
            #!/bin/bash
            set -ex

            # Backup $HOME/.gradle/init.d/bitrise-build-cache.init.gradle.kts
            GRADLE_INIT_PATH=$HOME/.gradle/init.d/bitrise-build-cache.init.gradle.kts
            if [[ -f "$GRADLE_INIT_PATH" ]]; then
              mv $GRADLE_INIT_PATH $GRADLE_INIT_PATH.backup
            fi

            go build -o /tmp/bin/bitrise-build-cache-cli

            SAMPLE_PATH=$(realpath ./gradle_verification_sample)
            
            # add plugin with CLI
            cd "$SAMPLE_PATH"
            /tmp/bin/bitrise-build-cache-cli add-gradle-deps

            # generate xml
            rm -f "$SAMPLE_PATH/gradle/verification-metadata.xml"
            ./gradlew --write-verification-metadata sha256 help

            echo "Generated verification xml:"
            cat "$SAMPLE_PATH/gradle/verification-metadata.xml"
    - script:
        title: Goreleaser (create binaries + publish to GH)
        deps:          
          brew:
          - name: goreleaser
        inputs:
        - content: |
            #!/usr/bin/env bash
            set -ex

            goreleaser release
    - deploy-to-bitrise-io@2: {}
    meta:
      bitrise.io:
        machine_type_id: g2-m1.8core
        stack: osx-xcode-edge
  test:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@8: {}
    - go-list@1: {}
    - script@1:
        title: golangci-lint
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            make lint
    - go-test@1: {}
    - deploy-to-bitrise-io@2: {}
  e2e:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@8: {}
    - script@1:
        title: build CLI
        inputs:
        - content: |-
            set -ex
            go build -o bitrise-build-cache-cli
    - script@1:
        title: Run test
        inputs:
        - content: |-
            set -ex
            bitrise run --config e2e/bitrise.yml test_gradle_output_diagnostics 

